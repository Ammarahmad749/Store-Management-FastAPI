"""Dummy Data

Revision ID: 2b99840d878e
Revises: 498a1b129d34
Create Date: 2023-10-04 01:11:12.203187

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import String, BIGINT, text
from sqlalchemy.sql import table, column


# revision identifiers, used by Alembic.
revision: str = '2b99840d878e'
down_revision: Union[str, None] = '498a1b129d34'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    data_upgrade()
    # ### end Alembic commands ###


def data_upgrade():
    conn1 = op.get_bind()

    categories_table = table('categories',
                             column('category_name', String))

    inventory_table = table('inventory',
                            column('inventory_name', String))

    product_table = table('products',
                          column('product_name', String),
                          column('price', BIGINT),
                          column('description', String),
                          column('category_id', BIGINT))

    stock_table = table('product_inventory_association',
                        column('product_id', BIGINT),
                        column('inventory_id', BIGINT),
                        column('current_stock', BIGINT),
                        column('low_stock_alert_threshold', BIGINT))
    sales_table = table('sales',
                        column('product_id', BIGINT),
                        column('quantity', BIGINT),
                        column('revenue', BIGINT))
    op.bulk_insert(categories_table, [
        {
            "category_name": "Mobiles"
        },
        {
            "category_name": "Laptops"
        },
        {
            "category_name": "Ipads"
        }
    ])

    op.bulk_insert(
        product_table, [
            {
                "product_name": "Iphone",
                "price": 1000,
                "description": "15 pro max",
                "category_id": conn1.execute(
                    text("""SELECT id FROM categories Where category_name ='Mobiles'""")).scalar()
            },
            {
                "product_name": "Hp",
                "price": 1000,
                "description": "Pavilion",
                "category_id": conn1.execute(
                    text("""SELECT id FROM categories Where category_name ='Laptops'""")).scalar()
            },
            {
                "product_name": "Ipad",
                "price": 1000,
                "description": "Air 4",
                "category_id": conn1.execute(
                    text("""SELECT id FROM categories Where category_name ='Ipads'""")).scalar()
            },
        ]
    )
    op.bulk_insert(inventory_table, [
        {
            "inventory_name": "Amazon"
        },
        {
            "inventory_name": "Ebay"
        }
    ])
    op.bulk_insert(stock_table, [
        {
            "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Iphone'""")).scalar(),
            "inventory_id": conn1.execute(
                text("""SELECT id FROM inventory Where inventory_name ='Amazon'""")).scalar(),
            "current_stock": 23,
            "low_stock_alert_threshold": 12

        },
        {
            "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Hp'""")).scalar(),
            "inventory_id": conn1.execute(
                text("""SELECT id FROM inventory Where inventory_name ='Amazon'""")).scalar(),
            "current_stock": 23,
            "low_stock_alert_threshold": 12

        },
        {
            "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Ipad'""")).scalar(),
            "inventory_id": conn1.execute(
                text("""SELECT id FROM inventory Where inventory_name ='Amazon'""")).scalar(),
            "current_stock": 23,
            "low_stock_alert_threshold": 12

        },
        {
            "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Iphone'""")).scalar(),
            "inventory_id": conn1.execute(
                text("""SELECT id FROM inventory Where inventory_name ='Ebay'""")).scalar(),
            "current_stock": 23,
            "low_stock_alert_threshold": 12

        },
        {
            "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Hp'""")).scalar(),
            "inventory_id": conn1.execute(
                text("""SELECT id FROM inventory Where inventory_name ='Ebay'""")).scalar(),
            "current_stock": 23,
            "low_stock_alert_threshold": 12

        },
        {
            "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Ipad'""")).scalar(),
            "inventory_id": conn1.execute(
                text("""SELECT id FROM inventory Where inventory_name ='Ebay'""")).scalar(),
            "current_stock": 23,
            "low_stock_alert_threshold": 12

        }
    ])

    op.bulk_insert(
        sales_table, [
            {
                "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Ipad'""")).scalar(),
                "quantity": 1,
                "revenue":1000
            },
            {
                "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Iphone'""")).scalar(),
                "quantity": 1,
                "revenue":1000
            },
            {
                "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Ipad'""")).scalar(),
                "quantity": 1,
                "revenue":1000,
                "created_at":"2022-10-04 01:43:36.955687"
            },
            {
                "product_id": conn1.execute(
                text("""SELECT id FROM products Where product_name ='Ipad'""")).scalar(),
                "quantity": 1,
                "revenue":1000,
                "created_at":"2021-10-04 01:43:36.955687"
            }
        ]
    )

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
